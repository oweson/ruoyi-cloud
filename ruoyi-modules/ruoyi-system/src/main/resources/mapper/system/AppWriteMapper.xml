<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.AppWriteMapper">

    <resultMap type="AppWrite" id="AppWriteResult">
        <result property="id" column="id"/>
        <result property="appName" column="app_name"/>
        <result property="appType" column="app_type"/>
        <result property="introduction" column="introduction"/>
        <result property="remark" column="remark"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="userId" column="user_id"/>

    </resultMap>

    <sql id="selectAppWriteVo">
        select id, app_name, app_type, introduction, remark, create_time, update_time,user_id from app_write
    </sql>

    <select id="selectAppWriteList" parameterType="AppWrite" resultMap="AppWriteResult">
        <include refid="selectAppWriteVo"/>
        <where>
            <if test="appName != null  and appName != ''">and app_name like concat('%', #{appName}, '%')</if>
            <if test="appType != null  and appType != ''">and app_type = #{appType}</if>
            <if test="introduction != null  and introduction != ''">and introduction like concat('%', #{introduction},
                '%')
            </if>
            <if test="userId != null  and userId != ''">and user_id =#{userId} </if>

        </where>
    </select>
<!--for update-->
    <select id="selectAppWriteById" parameterType="Long" resultMap="AppWriteResult">
        <include refid="selectAppWriteVo"/>
        where id = #{id}
    </select>

    <insert id="insertAppWrite" parameterType="AppWrite" useGeneratedKeys="true" keyProperty="id">
        insert into app_write
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="appName != null">app_name,</if>
            <if test="appType != null">app_type,</if>
            <if test="introduction != null">introduction,</if>
            <if test="remark != null">remark,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="userId != null">user_id,</if>

        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="appName != null">#{appName},</if>
            <if test="appType != null">#{appType},</if>
            <if test="introduction != null">#{introduction},</if>
            <if test="remark != null">#{remark},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="userId != null">#{userId},</if>

        </trim>
    </insert>

    <update id="updateAppWrite" parameterType="AppWrite">
        update app_write
        <trim prefix="SET" suffixOverrides=",">
            <if test="appName != null">app_name = #{appName},</if>
            <if test="appType != null">app_type = #{appType},</if>
            <if test="introduction != null">introduction = #{introduction},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteAppWriteById" parameterType="Long">
        delete from app_write where id = #{id}
    </delete>

    <delete id="deleteAppWriteByIds" parameterType="String">
        delete from app_write where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>